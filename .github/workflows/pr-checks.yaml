name: PR checks

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

env:
  CI: true

permissions: read-all

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.check-paths.outputs.frontend }}
      gitops: ${{ steps.check-paths.outputs.gitops }}
      infrastructure: ${{ steps.check-paths.outputs.infrastructure }}
    steps:
      - uses: actions/checkout@v4
      - id: check-paths
        uses: actions/github-script@v7
        with:
          script: |
            const response = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            const files = response.data.map(file => file.filename);
            const hasFrontendChanges = files.some(file => file.startsWith('frontend/'));
            const hasGitopsChanges = files.some(file => file.startsWith('gitops/'));
            const hasInfrastructureChanges = files.some(file => file.startsWith('infrastructure/'));

            core.setOutput('frontend', hasFrontendChanges);
            core.setOutput('gitops', hasGitopsChanges);
            core.setOutput('infrastructure', hasInfrastructureChanges);

  build-frontend:
    needs: [check-changes]
    runs-on: ubuntu-latest
    steps:
      - name: Check frontend changes and exit early
        run: echo "Frontend changes not detected, exiting early" && exit 0
        if: ${{ needs.check-changes.outputs.frontend != 'true' }}
      - name: No frontend changes - NOOP
        run: echo "Skipping build steps due to no frontend changes"
        if: ${{ needs.check-changes.outputs.frontend != 'true' }}
      - name: Checkout code
        uses: actions/checkout@v4
        if: ${{ needs.check-changes.outputs.frontend == 'true' }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        if: ${{ needs.check-changes.outputs.frontend == 'true' }}
        with:
          node-version: 22.x
      - name: npm clean-install
        if: ${{ needs.check-changes.outputs.frontend == 'true' }}
        working-directory: frontend/
        run: npm clean-install
      - name: podman build
        if: ${{ needs.check-changes.outputs.frontend == 'true' }}
        working-directory: frontend/
        run: podman build --file containerfile .

  test-frontend:
    needs: [check-changes]
    runs-on: ubuntu-latest
    steps:
      - name: Check frontend changes and exit early
        run: echo "Frontend changes not detected, exiting early" && exit 0
        if: ${{ needs.check-changes.outputs.frontend != 'true' }}
      - name: No frontend changes - NOOP
        run: echo "Skipping build steps due to no frontend changes"
        if: ${{ needs.check-changes.outputs.frontend != 'true' }}
      - name: Checkout code
        uses: actions/checkout@v4
        if: ${{ needs.check-changes.outputs.frontend == 'true' }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        if: ${{ needs.check-changes.outputs.frontend == 'true' }}
        with:
          node-version: 22.x
      - name: npm clean-install
        if: ${{ needs.check-changes.outputs.frontend == 'true' }}
        run: npm clean-install
        working-directory: frontend/
      - name: Check formatting
        if: ${{ needs.check-changes.outputs.frontend == 'true' }}
        run: npm run format:check
        working-directory: frontend/
      - name: Lint
        if: ${{ needs.check-changes.outputs.frontend == 'true' }}
        run: npm run lint:check
        working-directory: frontend/
      - name: Run unit tests
        if: ${{ needs.check-changes.outputs.frontend == 'true' }}
        run: npm run test -- --coverage
        working-directory: frontend/
      - name: Install Playwright browsers
        if: ${{ needs.check-changes.outputs.frontend == 'true' }}
        run: npx playwright install chromium --with-deps
        working-directory: frontend/
      - name: Run e2e tests
        if: ${{ needs.check-changes.outputs.frontend == 'true' }}
        run: npm run test:e2e
        working-directory: frontend/


  # -------------------- status aggregation ---------------------
  # This job aggregates the status of all PR check jobs.
  # Branch protection should be configured to require this job to succeed.
  # -------------------------------------------------------------
  pr-status-check:
    needs: [check-changes, build-frontend, test-frontend]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Aggregate job statuses
        run: |
          # Check each job's status.
          # Only consider jobs that *failed* as contributing to PR failure.
          # Skipped jobs will be ignored.

          JOB_STATUSES=

          if [ "${{ needs.build-frontend.result }}" == "failure" ]; then
            JOB_STATUSES+="- build-frontend: ${{ needs.build-frontend.result }}\n"
          fi
          if [ "${{ needs.test-frontend.result }}" == "failure" ]; then
            JOB_STATUSES+="- test-frontend: ${{ needs.test-frontend.result }}\n"
          fi

          if [ -n "$JOB_STATUSES" ]; then
            echo "::error::PR checks failed due to the following job failures:"
            echo "$JOB_STATUSES"
            exit 1 # exit with non-zero code to fail this job and the workflow
          fi

          echo "All relevant PR checks passed!"
