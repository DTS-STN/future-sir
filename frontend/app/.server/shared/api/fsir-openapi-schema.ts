/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/SINApplication': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations['sinapplication'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    SINApplicationResponse: {
      SINApplication?: components['schemas']['SINApplicationTypeResponse'];
    };
    /** @description The request body for SinApplication endpoint */
    SINApplicationRequest: {
      /** @description The credentials to access the system. */
      SystemCredential?: string;
      SINApplication?: components['schemas']['SINApplicationType'];
    };
    /** @description A data type for the SIN Application resource. */
    SINApplicationTypeResponse: {
      SINApplicationIdentification?: components['schemas']['SINApplicationIdentification'];
    };
    /** @description A data type for the SIN Application resource. */
    SINApplicationType: {
      SINApplicationIdentification?: components['schemas']['SINApplicationIdentification'][];
      Applicant?: components['schemas']['Client'];
      SINApplicationCategoryCode?: components['schemas']['SINApplicationCategoryCode'];
      SINApplicationDetail?: components['schemas']['SINApplicationDetail'][];
    };
    /** @description A data type for a geophysical location described by postal information. */
    AddressType: {
      AddressCountry?: components['schemas']['AddressCountry'];
      AddressPostalCode?: components['schemas']['AddressPostalCode'];
      AddressProvince?: components['schemas']['AddressProvince'];
      AddressRecipientName?: components['schemas']['AddressRecipientName'];
      AddressSecondaryUnitText?: components['schemas']['AddressSecondaryUnitText'];
      AddressStreet?: components['schemas']['AddressStreet'];
      /** @description A name of a city or town. */
      AddressCityName?: string;
    };
    /** @description A data type for the detail about an application. */
    ApplicationDetailType: {
      ApplicationDetailID?: components['schemas']['ApplicationDetailID'];
      ApplicationDetailValue?: components['schemas']['ApplicationDetailValue'];
    };
    /** @description A resource for clients of ESDC benefits and programs. */
    Client: components['schemas']['ClientType'];
    /** @description A resource for clients of ESDC benefits and programs. */
    CertificateClient: components['schemas']['CertificateClientType'];
    /** @description A data type for the client resource. */
    ClientType: {
      Certificate: components['schemas']['Certificate'][];
      ClientLegalStatus?: components['schemas']['ClientLegalStatus'];
      PersonBirthDate: components['schemas']['PersonBirthDate'];
      PersonContactInformation?: components['schemas']['PersonContactInformation'][];
      PersonBirthLocation: components['schemas']['PersonBirthLocation'];
      PersonGenderCode: components['schemas']['PersonGenderCode'];
      PersonLanguage: components['schemas']['PersonLanguage'][];
      PersonName: components['schemas']['PersonName'][];
      RelatedPerson?: components['schemas']['RelatedPerson'][];
    };
    /** @description A data type for the client resource. */
    CertificateClientType: {
      ClientIdentification?: components['schemas']['ClientIdentification'][];
      PersonBirthDate: components['schemas']['PersonBirthDate'];
      PersonBirthLocation?: components['schemas']['PersonBirthLocation'];
      PersonGenderCode?: components['schemas']['PersonGenderCode'];
      PersonName: components['schemas']['PersonName'][];
      PersonSexAtBirthCode?: components['schemas']['PersonSexAtBirthCode'];
    };
    /** @description A resource for documents associated with a vital event. */
    Certificate: components['schemas']['CertificateType'];
    /** @description A data type for the certificate resource. */
    CertificateType: components['schemas']['ResourceType'] & {
      CertificateCategoryCode?: components['schemas']['CertificateCategoryCode'];
      CertificateExpiryDate?: components['schemas']['CertificateExpiryDate'];
      CertificateEffectiveDate?: components['schemas']['CertificateEffectiveDate'];
      CertificateIdentification?: components['schemas']['CertificateIdentification'][];
      CertificateIssueDate?: components['schemas']['CertificateIssueDate'];
      Client?: components['schemas']['CertificateClient'];
      RelatedPerson?: components['schemas']['RelatedPerson'][];
    };
    /** @description A data type for how to contact a person or an organization. */
    ContactInformationType: {
      Address?: components['schemas']['Address'][];
      EmailAddress?: components['schemas']['EmailAddress'][];
      TelephoneNumber?: components['schemas']['TelephoneNumber'][];
    };
    /** @description A data type for a country, territory, dependency, or other such geopolitical subdivision of a location. */
    CountryType: {
      CountryCode?: components['schemas']['CountryCode'];
    };
    DateType: {
      /** Format: date */
      date?: string;
    };
    /** @description A data type for an email address identifies an email box to which messages are delivered. */
    EmailAddressType: {
      EmailAddressID?: components['schemas']['EmailAddressID'];
    };
    /** @description A data type for a full telephone number. */
    FullTelephoneNumberType: {
      TelephoneNumberFullID?: components['schemas']['TelephoneNumberFullID'];
    };
    /** @description A data type for a representation of an identity. */
    IdentificationType: {
      IdentificationID: components['schemas']['IdentificationID'];
    };
    /** @description A data type for a language. */
    LanguageType: {
      CommunicationCategoryCode?: components['schemas']['CommunicationCategoryCode'];
      LanguageCode?: components['schemas']['LanguageCode'];
      PreferredIndicator?: components['schemas']['PreferredIndicator'];
    };
    /** @description A data type for a condition where a person was or is lawfully in Canada pursuant to the Immigration laws of Canada. */
    LegalStatusType: {
      Certificate?: components['schemas']['Certificate'][];
    };
    LocationType: {
      LocationContactInformation?: components['schemas']['LocationContactInformation'][];
    };
    /** @description A data type for a combination of names and/or titles by which a person is known. */
    PersonNameType: {
      PersonFullName?: components['schemas']['PersonFullName'];
      PersonGivenName?: components['schemas']['PersonGivenName'];
      PersonNameCategoryCode?: components['schemas']['PersonNameCategoryCode'];
      PersonSurName?: components['schemas']['PersonSurName'];
    };
    /** @description A data type for a province of a country. */
    ProvinceType: {
      ProvinceCode?: components['schemas']['ProvinceCode'];
    };
    /** @description A data type for information about a person related to a client. */
    RelatedPersonType: {
      PersonBirthDate?: components['schemas']['PersonBirthDate'];
      PersonBirthLocation?: components['schemas']['PersonBirthLocation'];
      PersonContactInformation?: components['schemas']['PersonContactInformation'][];
      PersonLanguage?: components['schemas']['PersonLanguage'][];
      PersonGenderCode?: components['schemas']['PersonGenderCode'];
      PersonName?: components['schemas']['PersonName'][];
      PersonRelationshipCode?: components['schemas']['PersonRelationshipCode'];
      PersonSexAtBirthCode?: components['schemas']['PersonSexAtBirthCode'];
    };
    /** @description Represents a codeable concept used by a property of a resource. It defines the value, name and origin for this code. */
    ReferenceDataCodeType: {
      ReferenceDataID?: components['schemas']['ReferenceDataID'];
      ReferenceDataName?: components['schemas']['ReferenceDataName'];
    };
    /** @description A data type for a resource. */
    ResourceType: {
      ResourceReference?: components['schemas']['ResourceReference'];
    };
    /** @description A data type for a road, thoroughfare, or highway. */
    StreetType: {
      StreetNumberText?: components['schemas']['StreetNumberText'];
      StreetName?: components['schemas']['StreetName'];
    };
    /** @description A data type for a telephone number for a telecommunication device. */
    TelephoneNumberType: {
      FullTelephoneNumber?: components['schemas']['FullTelephoneNumber'];
      TelephoneNumberCategoryCode?: components['schemas']['TelephoneNumberCategoryCode'];
    };
    /** @description A value represented in different data types. */
    ValueType: {
      ValueBoolean?: components['schemas']['ValueBoolean'];
      ValueCode?: components['schemas']['ValueCode'];
      ValueString?: components['schemas']['ValueString'];
    };
    /** @description A set of location information, often described by postal information. */
    Address: components['schemas']['AddressType'];
    /** @description A country, territory, dependency, or other such geopolitical subdivision of a location. */
    AddressCountry: components['schemas']['CountryType'];
    /** @description A province of a country. */
    AddressProvince: components['schemas']['ProvinceType'];
    /** @description A road, thoroughfare or highway. */
    AddressStreet: components['schemas']['StreetType'];
    /** @description The value of the application detail data element. */
    ApplicationDetailValue: components['schemas']['ValueType'];
    CertificateCategoryCode: components['schemas']['ReferenceDataCodeType'];
    /** @description A classification applied to a certificate in order to categorize the type of it. IE: Proof of birth date, Proof of entry, etc. */
    CertificateClassificationCode: components['schemas']['ReferenceDataCodeType'];
    /** @description A date at which a certificate is expiring. */
    CertificateExpiryDate: components['schemas']['DateType'];
    /** @description A date at which a certificate is effective. */
    CertificateEffectiveDate: components['schemas']['DateType'];
    /** @description A date at which a certificate was issued and when appropriate, signed or otherwise authenticated. */
    CertificateIssueDate: components['schemas']['DateType'];
    /** @description An identification that references a certificate. */
    CertificateIdentification: components['schemas']['IdentificationType'];
    /** @description An identification for a client. */
    ClientIdentification: components['schemas']['IdentificationType'];
    /** @description A condition where a person was or is lawfully in Canada pursuant to the Immigration laws of Canada. */
    ClientLegalStatus: components['schemas']['LegalStatusType'];
    /** @description A code of human communication, ie: spoken, written. */
    CommunicationCategoryCode: components['schemas']['ReferenceDataCodeType'];
    /** @description A country, territory, dependency, or other such geopolitical subdivision of a location. */
    CountryCode: components['schemas']['ReferenceDataCodeType'];
    /** @description An email address identifies an email box to which messages are delivered. */
    EmailAddress: components['schemas']['EmailAddressType'];
    /** @description A telephone number for a telecommunication device by which a person or organization may be contacted. */
    TelephoneNumber: components['schemas']['TelephoneNumberType'];
    /** @description A full telephone number. */
    FullTelephoneNumber: components['schemas']['FullTelephoneNumberType'];
    /** @description A code of the language. */
    LanguageCode: components['schemas']['ReferenceDataCodeType'];
    /** @description A set of contact information for a location. */
    LocationContactInformation: components['schemas']['ContactInformationType'];
    /** @description A date a person was born. */
    PersonBirthDate: components['schemas']['DateType'];
    /** @description A location where a person was born. */
    PersonBirthLocation: components['schemas']['LocationType'];
    /** @description A means of contacting a person. */
    PersonContactInformation: components['schemas']['ContactInformationType'];
    /** @description A kind of person name. */
    PersonNameCategoryCode: components['schemas']['ReferenceDataCodeType'];
    /** @description An individual's personal and social identity as a man, woman or non-binary person (a person who is not exclusively a man or a woman). */
    PersonGenderCode: components['schemas']['ReferenceDataCodeType'];
    /** @description A language capability of a person. */
    PersonLanguage: components['schemas']['LanguageType'];
    /** @description A combination of names and/or titles by which a person is known. */
    PersonName: components['schemas']['PersonNameType'];
    /** @description A code for the relationship between two persons. */
    PersonRelationshipCode: components['schemas']['ReferenceDataCodeType'];
    /** @description A code of sex assigned at birth, typically assigned based on a person's reproductive system and other physical characteristics. */
    PersonSexAtBirthCode: components['schemas']['ReferenceDataCodeType'];
    /** @description A code for a province of a country. */
    ProvinceCode: components['schemas']['ReferenceDataCodeType'];
    /** @description Information about a person related to a client. */
    RelatedPerson: components['schemas']['RelatedPersonType'];
    /** @description A type of SIN application. */
    SINApplicationCategoryCode: components['schemas']['ReferenceDataCodeType'];
    /** @description Application Details for a SIN Application. Usually used for information on forms that are not being stored as data concepts. */
    SINApplicationDetail: components['schemas']['ApplicationDetailType'];
    /** @description An Identification for a SIN Application */
    SINApplicationIdentification: components['schemas']['IdentificationType'];
    /** @description A kind of telephone number. */
    TelephoneNumberCategoryCode: components['schemas']['ReferenceDataCodeType'];
    /** @description A code value. */
    ValueCode: components['schemas']['ReferenceDataCodeType'];
    /** @description An identifier of a post office-assigned zone for an address. */
    AddressPostalCode: string;
    /** @description A name of a person, organization, or other recipient to whom physical mail may be sent. */
    AddressRecipientName: string;
    /** @description A particular unit within a larger unit or grouping at a location. */
    AddressSecondaryUnitText: string;
    /** @description A unique ID for an application detail data element. */
    ApplicationDetailID: string;
    /** @description An unique identifier for an email box. */
    EmailAddressID: string;
    /** @description A complete telephone number. */
    TelephoneNumberFullID: string;
    /** @description An identifier. */
    IdentificationID: string;
    /** @description A complete name of a person. */
    PersonFullName: string;
    /** @description A first name of a person. */
    PersonGivenName: string;
    /** @description A last name or family name of a person. */
    PersonSurName: string;
    /** @description An indicator marking this class as preferred. */
    PreferredIndicator: boolean;
    /** @description A code or identifier defined for a reference data set. */
    ReferenceDataID: string;
    /** @description A name or description of a code or identifier. */
    ReferenceDataName: string;
    /** @description Literal reference, Relative, internal or absolute URL. */
    ResourceReference: string;
    /** @description A number that identifies a particular unit or location within a street. */
    StreetNumberText: string;
    /** @description A name of a street. */
    StreetName: string;
    /** @description A boolean value. */
    ValueBoolean: boolean;
    /** @description A string value. */
    ValueString: string;
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  sinapplication: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['SINApplicationRequest'];
      };
    };
    responses: {
      /** @description Success */
      200: {
        headers: Record<string, unknown>;
        content: {
          'application/json': components['schemas']['SINApplicationResponse'];
        };
      };
    };
  };
}
